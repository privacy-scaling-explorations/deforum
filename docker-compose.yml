services:
  postgres:
    image: postgres:15
    platform: linux/amd64
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-pse_forum}
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./apps/db/init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  api:
    build: 
      context: .
      dockerfile: apps/api/Dockerfile
    platform: linux/amd64
    ports:
      - "5001:5000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - NODE_ENV=${NODE_ENV:-development}
      - API_PORT=5000
      - API_HOST=0.0.0.0
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  client:
    build: 
      context: .
      dockerfile: apps/client/Dockerfile
    platform: linux/amd64
    ports:
      - "3001:80"
    depends_on:
      api:
        condition: service_healthy
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:5001/api}
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres-data:

networks:
  default:
    driver: bridge 